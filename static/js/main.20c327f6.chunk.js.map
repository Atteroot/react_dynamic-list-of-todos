{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","this","props","title","completed","selectUser","userId","type","className","ClassNames","value","onClick","event","React","Component","TodoList","todos","query","status","filteredTodos","filter","todo","toLowerCase","includes","map","id","key","TODOS_URL","USERS_URL","a","fetch","response","json","result","data","getUser","CurrentUser","state","userInfo","then","setState","prevProps","name","email","phone","clearInfo","App","selectedUserId","target","clearUserInfo","getTodos","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20c327f6.chunk.js","sourcesContent":["import React from 'react';\nimport ClassNames from 'classnames';\n\nexport class Todo extends React.Component {\n  render() {\n    const { title, completed, selectUser, userId } = this.props;\n\n    return (\n      <>\n        <div>\n          <input type=\"checkbox\" />\n          <p>{title}</p>\n        </div>\n\n        <button\n          className={ClassNames('TodoList__user-button', 'button', {\n            'TodoList__user-button--selected': completed,\n          })}\n          type=\"button\"\n          value={userId}\n          onClick={event => selectUser(event)}\n        >\n          {`User #${userId}`}\n        </button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport ClassNames from 'classnames';\nimport { Todo } from '../Todo/Todo';\n\nexport class TodoList extends React.Component {\n  render() {\n    const { todos, selectUser, query, status } = this.props;\n\n    let filteredTodos = todos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase()));\n\n    if (status === 'Completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    } else if (status === 'Not completed') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    }\n\n    return (\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(({ completed, id, title, userId }) => (\n            <li\n              key={id}\n              className={ClassNames('TodoList__item', {\n                'TodoList__item--checked': completed,\n                'TodoList__item--unchecked': !completed,\n              })}\n            >\n              <Todo\n                completed={completed}\n                title={title}\n                userId={userId}\n                selectUser={selectUser}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos/';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport async function getTodos() {\n  const response = await fetch(TODOS_URL);\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport async function getUser(userId) {\n  const response = await fetch(`${USERS_URL}${userId}`);\n  const result = await response.json();\n\n  return result.data;\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    userInfo: null,\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then(userInfo => this.setState({\n        userInfo,\n      }));\n  }\n\n  render() {\n    const { userInfo } = this.state;\n\n    return (!userInfo)\n      ? 'No info about user'\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {userInfo.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{userInfo.name}</h3>\n          <p className=\"CurrentUser__email\">{userInfo.email}</p>\n          <p className=\"CurrentUser__phone\">{userInfo.phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clear-button\"\n            onClick={this.props.clearInfo}\n          >\n            Clear info\n          </button>\n        </div>\n      );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    status: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos: todos.filter(todo => todo.userId != null),\n      }));\n  }\n\n  selectUser = (event) => {\n    this.setState({ selectedUserId: event.target.value });\n  }\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, query, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            className=\"App__search\"\n            type=\"text\"\n            placeholder=\"Enter todo title\"\n            value={query}\n            onChange={(event) => {\n              this.setState({ query: event.target.value });\n            }}\n          />\n          <select\n            onChange={event => this.setState({ status: event.target.value })\n            }\n            className=\"App__select-visible\"\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Completed\">Completed</option>\n            <option value=\"Not completed\">Not completed</option>\n          </select>\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n            query={query}\n            status={status}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearInfo={this.clearUserInfo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}